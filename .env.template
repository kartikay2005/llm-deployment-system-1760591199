# LLM Code Deployment System - Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED: OpenAI Configuration
# =============================================================================
# Get your API key from https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# =============================================================================
# REQUIRED: GitHub Configuration
# =============================================================================
# Create a Personal Access Token at https://github.com/settings/tokens
# Required scopes: repo, workflow, write:packages, delete_repo
GITHUB_TOKEN=ghp_your-github-personal-access-token-here

# =============================================================================
# REQUIRED: Authentication Secret
# =============================================================================
# This is your unique secret that you submitted in the Google Form
# It validates that requests are coming from authorized sources
USER_SECRET=your-unique-secret-from-google-form

# =============================================================================
# Flask Application Configuration
# =============================================================================
# Environment: development or production
FLASK_ENV=development

# Flask secret key for session management (generate a secure random string)
SECRET_KEY=your-secure-random-secret-key-here

# Port for the application (default: 5000)
PORT=5000

# =============================================================================
# Optional: Database Configuration
# =============================================================================
# For production, you might want to use PostgreSQL instead of SQLite
# DATABASE_URL=sqlite:///evaluation_results.db
# DATABASE_URL=postgresql://user:pass@localhost/llm_deployment

# =============================================================================
# Optional: Logging Configuration
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Log file path
LOG_FILE=app.log

# =============================================================================
# Optional: Security Configuration
# =============================================================================
# Maximum file upload size (default: 16MB)
MAX_CONTENT_LENGTH=16777216

# Request timeout in seconds
REQUEST_TIMEOUT=30

# =============================================================================
# Optional: GitHub Pages Configuration
# =============================================================================
# Time to wait for GitHub Pages to deploy (seconds)
PAGES_DEPLOY_WAIT=300

# =============================================================================
# Optional: Evaluation Configuration
# =============================================================================
# Browser timeout for Playwright (milliseconds)
BROWSER_TIMEOUT=30000

# Maximum evaluation retries
MAX_EVALUATION_RETRIES=3

# =============================================================================
# Development/Testing Configuration
# =============================================================================
# Set to 'true' to enable debug mode (DO NOT use in production)
DEBUG=false

# Set to 'true' to skip actual OpenAI calls during development
MOCK_OPENAI=false

# Set to 'true' to skip GitHub API calls during development
MOCK_GITHUB=false

# =============================================================================
# SETUP INSTRUCTIONS:
# =============================================================================
# 1. Copy this file to .env:
#    cp .env.template .env
#
# 2. Get your OpenAI API key:
#    - Visit https://platform.openai.com/api-keys
#    - Create a new secret key
#    - Replace "sk-your-openai-api-key-here" with your actual key
#
# 3. Get your GitHub Personal Access Token:
#    - Visit https://github.com/settings/tokens
#    - Generate a new classic token
#    - Select scopes: repo, workflow, write:packages
#    - Replace "ghp_your-github-personal-access-token-here" with your token
#
# 4. Set your unique secret:
#    - Replace "your-unique-secret-from-google-form" with your actual secret
#
# 5. Generate a secure Flask secret key:
#    python -c "import secrets; print(secrets.token_hex(32))"
#    - Replace "your-secure-random-secret-key-here" with the generated key
#
# 6. Test your configuration:
#    python test_deployment.py
#
# =============================================================================
